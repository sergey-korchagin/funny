apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

//apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.parse'


buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.parse.com/repo' }
        jcenter()
        maven { url 'https://maven.fabric.io/public' }

    }
    dependencies {
        classpath 'com.parse.tools:gradle:1.+'
        classpath 'io.fabric.tools:gradle:1.+'


    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.parse.starter"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.0.1'

    compile files('libs/gson-2.4.jar')
    // compile 'com.google.android.gms:play-services-analytics:8.3.0'


    compile 'com.parse.bolts:bolts-tasks:1.3.0'
    compile 'com.parse:parse-android:1.11.0'
    compile 'it.sephiroth.android.library.picasso:picasso:2.5.2.4b'
    compile 'com.google.android.gms:play-services-ads:8.3.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
}

/* Uncomment if you enable ProGuard and you want to automatically upload symbols on build.
parse {
  applicationId "YOUR_APPLICATION_ID"
  masterKey "YOUR_MASTER_KEY"

  // Make symbol upload automatic. Otherwise, use e.g. ../gradlew parseUploadSymbolsDebug;
  uploadSymbols true
}
*/
